{"version":3,"sources":["webpack:///./src/components/AppTile.jsx"],"names":["fetchIcon","url","icon","cozyClient","fetch","resp","ok","Error","statusText","blob","console","warn","message","mimeType","type","match","URL","createObjectURL","AppTile","props","app","t","client","context","displayName","name_prefix","name","links","related","Component"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAEA;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,YAAY,SAAZA,SAAY;AAAA;AAAA,uEAAc,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,kBAD0B;AAAA;AAAA;AAAA,qBAGTC,WAAWC,KAAX,CAAiB,KAAjB,EAAwBH,GAAxB,CAHS;;AAAA;AAGtBI,kBAHsB;;AAAA,kBAIvBA,KAAKC,EAJkB;AAAA;AAAA;AAAA;;AAAA,oBAKpB,IAAIC,KAAJ,gCAAuCF,KAAKG,UAA5C,UAA2DP,GAA3D,CALoB;;AAAA;AAAA;AAAA,qBAMfI,KAAKI,IAAL,EANe;;AAAA;AAM5BP,kBAN4B;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAQ5BQ,sBAAQC,IAAR,CAAa,YAAMC,OAAnB;AAR4B,+CASrB,IATqB;;AAAA;AAWxBC,sBAXwB,GAWbX,KAAKY,IAXQ;;AAAA,oBAY1BD,YAAYA,SAASE,KAAT,CAAe,aAAf,CAZc;AAAA;AAAA;AAAA;;AAAA,+CAarBC,IAAIC,eAAJ,CAAoBf,IAApB,CAbqB;;AAAA;AAe9BQ,sBAAQC,IAAR,eAAyBV,GAAzB;AAf8B,+CAgBvB,IAhBuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAd;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;IAmBaiB,O,WAAAA,O;;;;;;;;;;;6BACF;AAAA,mBACY,KAAKC,KADjB;AAAA,UACCC,GADD,UACCA,GADD;AAAA,UACMC,CADN,UACMA,CADN;AAAA,UAECC,MAFD,GAEY,KAAKC,OAFjB,CAECD,MAFD;;AAGP,UAAME,cAAcJ,IAAIK,WAAJ,GACbL,IAAIK,WADS,SACML,IAAIM,IADV,GAEhBN,IAAIM,IAFR;AAGA,aACE;AAAA;AAAA,UAAG,WAAU,cAAb,EAA4B,MAAMN,IAAIO,KAAJ,IAAaP,IAAIO,KAAJ,CAAUC,OAAzD;AACE;AAAA;AAAA,YAAQ,WAAU,aAAlB;AACE;AAAA;AAAA,cAAK,WAAU,WAAf;AACE,0CAAC,iBAAD;AACE,mBAAKP,EAAE,cAAF,EAAkB,EAAEK,MAAMF,WAAR,EAAlB,CADP;AAEE,mBAAKJ,GAFP;AAGE,yBAAWpB,UAAUsB,MAAV;AAHb;AADF;AADF,SADF;AAUE;AAAA;AAAA,YAAI,WAAU,YAAd;AAA4BE;AAA5B;AAVF,OADF;AAcD;;;;EArB0BK,gB;;kBAwBd,uBAAYX,OAAZ,C","file":"0.6185a7eb413afdcd165c.hot-update.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { translate } from 'cozy-ui/react/I18n'\nimport AppIcon from 'cozy-ui/react/AppIcon'\n\nconst fetchIcon = cozyClient => async url => {\n  let icon\n  try {\n    const resp = await cozyClient.fetch('GET', url)\n    if (!resp.ok)\n      throw new Error(`Error while fetching icon ${resp.statusText}: ${url}`)\n    icon = await resp.blob()\n  } catch (error) {\n    console.warn(error.message)\n    return null\n  }\n  const mimeType = icon.type\n  if (mimeType && mimeType.match(/^image\\/.*$/)) {\n    return URL.createObjectURL(icon)\n  }\n  console.warn(`App icon ${url} is not an image.`)\n  return null\n}\n\nexport class AppTile extends Component {\n  render() {\n    const { app, t } = this.props\n    const { client } = this.context\n    const displayName = app.name_prefix\n      ? `${app.name_prefix} ${app.name}`\n      : app.name\n    return (\n      <a className=\"item-wrapper\" href={app.links && app.links.related}>\n        <header className=\"item-header\">\n          <div className=\"item-icon\">\n            <AppIcon\n              alt={t('app.logo.alt', { name: displayName })}\n              app={app}\n              fetchIcon={fetchIcon(client)}\n            />\n          </div>\n        </header>\n        <h3 className=\"item-title\">{displayName}</h3>\n      </a>\n    )\n  }\n}\n\nexport default translate()(AppTile)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/AppTile.jsx"],"sourceRoot":""}